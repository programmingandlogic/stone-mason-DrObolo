/*
 * File: StoneMasonKarel.java
 * --------------------------
 * The StoneMasonKarel subclass as it appears here does nothing.
 * When you finish writing it, it should solve the "repair the quad"
 * problem from Assignment 1.  In addition to editing the program,
 * you should be sure to edit this comment so that it no longer
 * indicates that the program does nothing.
 */

import stanford.karel.*;

public class StoneMasonKarel extends SuperKarel {

	public void run () {
		fixTheColumns ();
		faceEast ();
	}
	
	private void fixTheColumns() {
			turnLeft ();
		while (notFacingEast()) {
			fixOneColumn ();
		if (frontIsClear()) {
			moveToNextColumn ();
			}
		}
	}
	//Checks to see if another column is present by seeing if front is clear before moving
	
	//Looking up at the broken column
	private void fixOneColumn () {
		if (noBeepersPresent()) { 
			putBeeper ();
		}
		while (frontIsClear()) {
			move ();
			if (noBeepersPresent()) {
				putBeeper ();
			}
		}
		turnAround ();
		while (frontIsClear()) {
			move ();
		}
		faceEast ();
	}
	//Fixed a column and is looking in the direction of the next column
	
	//Moves to column then looks up at it
	private void moveToNextColumn () {
		for (int i = 0; i < 4; i++) {
			move ();
		}
		turnLeft ();
	}
	
	private void faceEast() {
		while (notFacingEast()) {
			turnLeft ();
		}
	}
}
